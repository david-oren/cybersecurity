Le code de base :

    var pass = unescape("unescape%28%22String.fromCharCode%2528104%252C68%252C117%252C102%252C106%252C100%252C107%252C105%252C49%252C53%252C54%2529%22%29");

La solution :

    alert( eval( eval( pass ) ) );

Il suffit de coller ce code dans la console, et le mot de passe apparaitra dans une popup.

La fonction
eval
va ex√©cuter le code qu‚Äôon lui donne sous forme de chaine de caract√®res. On dit qu‚Äôelle va l‚Äô√©valuer

Ressources compl√©mentaires :

    La page MDN sur la fonction eval : https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/eval

ou



    var pass = unescape("unescape%28%22String.fromCharCode%2528104%252C68%252C117%252C102%252C106%252C100%252C107%252C105%252C49%252C53%252C54%2529%22%29");
    var a = String.fromCharCode(104,68,117,102,106,100,107,105,49,53,54);
    document.write("le password est ",a);

T√©l√©charger

il faut dabord unescape la variable "pass", ce qui nous donne :

    String.fromCharCode(104,68,117,102,106,100,107,105,49,53,54);

puis il faut retranscrire la variable a en string depuis char nous donnant finalement le mot de passe de validation :

 hDufjdki156

 ou

 En ouvrant la page du challenge on obtient une page blanche, donc un Ctrl + u pour afficher le code source.

On d√©couvre alors que le mot de passe est pr√©sent dans ce script :

    <script type="text/javascript">
            var pass = unescape("unescape%28%22String.fromCharCode%2528104%252C68%252C117%252C102%252C106%252C100%252C107%252C105%252C49%252C53%252C54%2529%22%29");
    </script>

T√©l√©charger

Le mot de passe √† √©t√© rendu incompr√©hensible avec la fonction escape() du javascript qui permet de prot√©ger les cha√Ænes de caract√®res en encodant les caract√®res sp√©ciaux. La fonction unescape() ici permet de revenir en arri√®re.

On descend d‚Äôun √©tage avec unescape() :
var pass = unescape("unescape("String.fromCharCode%28104%2C68%2C117%2C102%2C106%2C100%2C107%2C105%2C49%2C53%2C54%29")");

Il reste encore du texte a d√©coder, on descend d‚Äôun deuxi√®me √©tage √† nouveau avec unescape() :
var pass = unescape("unescape("String.fromCharCode(104,68,117,102,106,100,107,105,49,53,54)")");

Nous voil√† maintenant avec une s√©rie de chiffre :
104,68,117,102,106,100,107,105,49,53,54

Avec un peu de recherche, on d√©couvre qu‚Äôil s‚Äôagit de la valeur d√©cimale du tableau ascii des caract√®res qui composent le mot de passe.

Enfin le troisi√®me √©tage, une petite substitution rapide "d√©cimale vers char" nous donne :
var pass = unescape("unescape("String.fromCharCode(h,D,u,f,j,d,k,i,1,5,6)")");

Et voil√† challenge valid√©

Documentation utile : http://www.asciitable.com/index/asciifull.gif

https://developer.mozilla.org/fr/docs/JavaScript_Guide/Fonctions_pr%C3%A9d%C3%A9finies/Les_fonctions_escape_et_unescape

Outil : http://www.tareeinternet.com/scripts/unescape.html


ou

Utilisation de la m√©thode unescape() pour d√©coder la cha√Æne de caract√®re hexad√©cimale :
('%2528104%252C68%252C117%252C102%252C106%252C100%252C107%252C105%252C49%252C53%252C54%2529%22%29')

R√©sultat :
%28104%2C68%2C117%2C102%2C106%2C100%2C107%2C105%2C49%2C53%2C54%29

2/ D√©coder une nouvelle fois le r√©sultat pr√©c√©dent √©crit en hexad√©cimale :
unescape('%28104%2C68%2C117%2C102%2C106%2C100%2C107%2C105%2C49%2C53%2C54%29')

R√©sultat :
"(104,68,117,102,106,100,107,105,49,53,54)"

3/ Maintenant, il faut d√©coder la cha√Æne de caract√®re √©crite √† partir de points de code UTF-16, ceci est possible gr√¢ce √† la m√©thode statique String.fromCharCode() :
console.log(String.fromCharCode(104,68,117,102,106,100,107,105,49,53,54));

r√©sultat = hDufjdki156

Et nous avons le mot de passe üòâ

Sources :
https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/unescape
https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/String/fromCharCode


ou

Habitu√© √† l‚Äôanalyse de virus, j‚Äôutilise le programme Linux rhino pour ex√©cuter les JS (ce qui permet de se d√©connecter d‚ÄôInternet).
Soit toto.js, le morceau de JS √† d√©sofusquer.

Premi√®re phase

var pass = unescape("unescape%28%22String.fromCharCode%2528104%252C68%252C117%252C102%252C106%252C100%252C107%252C105%252C49%252C53%252C54%2529%22%29");
print (pass);

rhino toto.js 
unescape("String.fromCharCode%28104%2C68%2C117%2C102%2C106%2C100%2C107%2C105%2C49%2C53%2C54%29")

On voit que la d√©sobfuscation n‚Äôest pas termin√©e

Seconde phase

var pass = unescape("unescape%28%22String.fromCharCode%2528104%252C68%252C117%252C102%252C106%252C100%252C107%252C105%252C49%252C53%252C54%2529%22%29");
print (eval(pass));

rhino toto.js 
String.fromCharCode(104,68,117,102,106,100,107,105,49,53,54)

Toujours pas fini

Troisi√®me phase

var pass = unescape("unescape%28%22String.fromCharCode%2528104%252C68%252C117%252C102%252C106%252C100%252C107%252C105%252C49%252C53%252C54%2529%22%29");
print (eval(eval(pass)));

rhino toto.js 
hDufjdki156

ou

1) CTRL - U pour voir le code source

2) Copier la cl√© chiffr√© : %2528104%252C68%252C117%252C102%252C106%252C100%252C107%252C105%252C49%252C53%252C54%2529%22%29

3) Coller la cl√© ici pour d√©chiffrer http://www.utilities-online.info/ur... cliquez sur decode ‚Äî> puis sur <--- decode
Vous obtiendrez ceci : (104,68,117,102,106,100,107,105,49,53,54)") il ne reste plus qu‚Äôa convertir le code
104,68,117,102,106,100,107,105,49,53,54 ici : https://www.dcode.fr/code-ascii voil√†



